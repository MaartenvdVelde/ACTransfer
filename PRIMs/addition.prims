// Add numbers by counting
// and remember the answer for later retrieval
//

define task addition {
    initial-goals: (countnumbers)
    goals: (giveanswer)
    task-constants: (addition count-fact count-fact giveanswer)
    start-screen: add
    imaginal-autoclear: nil
    default-activation: 1.0
}


define goal countnumbers {

    operator init-addition {
        WM1=nil
        ==>
        addition->WM1
        V1->WM2
        zero->WM3
        V1->WM4
        GC2->RT1
        V1->RT2
    }

    operator add-to-sum {
        WM4=RT2
        ==>
        RT3->WM4
        GC3->RT1
        WM3->RT2
    }

    operator add-to-count {
        WM3=RT2
        RT3<>V2
        ==>
        RT3->WM3
        GC2->RT1
        WM4->RT2
    }

    operator finished-sum {
        WM3=RT2
        RT3=V2
        ==>
        RT3->WM3
        giveanswer->G1
    }

}

define goal giveanswer {
    operator say-sum {
        WM3<>nil
    ==>
        say->AC1
        WM4->AC2
        stop->G1
    }
}


define facts {
    (cf0 count-fact  zero  one :activation 3.0)
    (cf1 count-fact  one  two :activation 3.0)
    (cf2 count-fact  two  three :activation 3.0)
    (cf3  count-fact  three  four :activation 3.0)
    (cf4  count-fact  four  five :activation 3.0)
    (cf5  count-fact  five  six :activation 3.0)
    (cf6  count-fact  six  seven :activation 3.0)
    (cf7  count-fact  seven  eight :activation 3.0)
    (cf8  count-fact  eight  nine :activation 3.0)
}

define inputs {
(two three five)
(one two three)
(four two six)
}

define screen add {
(?0 ?1)
}

define goal-action {
(say ?2)
}

