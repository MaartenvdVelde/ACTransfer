;; Semantic model

(set-goal semantic)

(add-dm

(start-semantic
isa operator
slot1 property
slot2 subvocalize
condition V1<>nil;WM1=nil
action V1->WM1;C1->RT1;V1->RT2;C2->AC1;V1->AC2
:activation 1.0
:assoc semantic
)

(move-up
isa operator
slot1 property
slot2 subvocalize
condition RT2=WM1;V2<>WM1
action RT3->WM1;C1->RT1;RT3->RT2;C2->AC1;RT3->AC2
:activation 1.0
:assoc semantic
)

(say-yes
isa operator
slot1 stop
slot2 say
slot3 yes
condition V2=WM1
action C1->G1;C2->AC1;C3->AC2
:activation 1.0
:assoc semantic
)

(say-no
isa operator
slot1 stop
slot2 say
slot3 no
slot4 error
condition V2<>WM1;RT1=C4
action C1->G1;C2->AC1;C3->AC2
:activation 1.0
:assoc semantic
)

(sem1 isa fact slot1 property slot2 lion slot3 mammal :activation 1.0)
(sem2 isa fact slot1 property slot2 mammal slot3 animal :activation 1.0)
(sem3 isa fact slot1 property slot2 animal slot3 livingthing :activation 1.0)
(sem4 isa fact slot1 property slot2 plant slot3 livingthing :activation 1.0)
)

(specify-inputs
(i1 lion livingthing)
(i2 lion plant)
(i3 lion mammal)
)