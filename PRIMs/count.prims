define task count {
  initial-goals: (count)
  start-screen: start
  imaginal-autoclear: nil
  ol: t
  rt: -2.0
  lf: 0.2
  default-operator-self-assoc: 0.0
}

define goal count {
  operator start-count(activation= 1.0) {
  "Start counting"
   V1<>nil
   WM1=nil
  ==>
   V1->WM1
   countfact->RT1
   V1->RT2
   say->AC1
   V1->AC2
   }

  operator iterate(activation=1.0) {
    "Iterate as long as count isn't done"
    RT2=WM1
    V2<>WM1
   ==>
    RT3->WM1
    countfact->RT1
    RT3->RT2
    say->AC1
    RT3->AC2
  }

  operator final(activation=1.0) {
    "Stop when reaching final number"
    V2=WM1
   ==>
    stop->G1
  }
}

define facts {
(cf1 countfact  one  two :activation 1.0)
(cf2 countfact  two  three :activation 1.0)
(cf3  countfact  three  four :activation 1.0)
(cf4  countfact  four  five :activation 1.0)
(cf5  countfact  five  six :activation 1.0)
}

define screen start {
(?0 ?1)
}

define inputs {
(two four)
(one three)
(three five)
}

start-screen = start
